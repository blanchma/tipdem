<div id="campaing">
  <h3><%=  t("myprom.title") %></h3>
  <br /><br />
  <table class="tabla" border="0" cellpadding="0" cellspacing="0">
    <thead>
      <tr>
        <%= content_tag :th, t("myprom.campaign") , :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.campaign") %>
        <%= content_tag :th, t("myprom.refer") , :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.refer") %>
        <%= content_tag :th, t("myprom.click") , :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.click") %>
        <%= content_tag :th, t("myprom.hits") , :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.hits") %>
        <%= content_tag :th, t("myprom.earn"), :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.earn") %>
        <%= content_tag :th, t("myprom.post") , :alt => "tooltip" ,  :border => "0", :align => "absmiddle", :title => t("myprom.tool.post") %>
        <%= content_tag :th, t("myprom.action"), :colspan => "1" %>
      </tr>
    </thead>
    <tbody id="mycamps">
      <% for promotion in @promotions %>
        <tr style="border-bottom:solid; border-bottom-width: 1px; border-bottom-color: #09F;">
          <td><%= h  promotion.campaign.name %></td>
          <td><%= promotion.chains.count %></td>
          <td><%= promotion.landing_page_hits.count %></td>
          <td><%= promotion.client_page_hits.count %></td>
          <td><%= number_to_currency(promotion.current_money, :unit => "$", :format => "%u%n")  %></td>
          <td><%= promotion.posts.count  %></td>
          <td>
            <%= link_to image_tag("Comment-16.png", :title => "Promocionar"), campaign_posts_path(promotion.campaign_id)%>
          </td>
        </tr>

      <% end %>
    </tbody >
  </table>
  <%= paginate @promotions %>
  <br/>


</div>
<div id="extra">
<%#= render :partial => 'shared/collected_amount' %>
</div>
<style type="text/css">

  #modalContainer {
    background-color:transparent;
    position:absolute;
    width:100%;
    height:100%;
    top:0px;
    left:0px;
    z-index:10000;
    background-image:url(tp.png); /* required by MSIE to prevent actions on lower z-index elements */
  }

  #alertBox {
    position:relative;
    width:300px;
    min-height:100px;
    margin-top:50px;
    border:2px solid #000;
    background-color:#F2F5F6;
    background-image:url(alert.png);
    background-repeat:no-repeat;
    background-position:20px 30px;
  }

  #modalContainer > #alertBox {
    position:fixed;
  }

  #alertBox h1 {
    margin:0;
    font:bold 0.9em verdana,arial;
    background-color:#78919B;
    color:#FFF;
    border-bottom:1px solid #000;
    padding:2px 0 2px 5px;
  }

  #alertBox p {
    font:0.7em verdana,arial;
    height:50px;
    padding-left:5px;
    margin-left:55px;
  }

  #alertBox #closeBtn {
    display:block;
    position:relative;
    margin:5px auto;
    padding:3px;
    border:2px solid #000;
    width:70px;
    font:0.7em verdana,arial;
    text-transform:uppercase;
    text-align:center;
    color:#FFF;
    background-color:#78919B;
    text-decoration:none;
  }
</style>

<script type="text/javascript">
  // constants to define the title of the alert and button text.
  var ALERT_TITLE = "Tipdem";
  var ALERT_BUTTON_TEXT = "Ok";

  // over-ride the alert method only if this a newer browser.
  // Older browser will see standard alerts
  if(document.getElementById) {
    window.alert = function(txt) {
      createCustomAlert(txt);
    }
  }

  // removes the custom alert from the DOM
  function removeCustomAlert() {
    document.getElementsByTagName("body")[0].removeChild(document.getElementById("modalContainer"));
  }

  function createCustomAlert(txt) {
    // shortcut reference to the document object
    d = document;

    // if the modalContainer object already exists in the DOM, bail out.
    if(d.getElementById("modalContainer")) return;

    // create the modalContainer div as a child of the BODY element
    mObj = d.getElementsByTagName("body")[0].appendChild(d.createElement("div"));
    mObj.id = "modalContainer";
    // make sure its as tall as it needs to be to overlay all the content on the page
    mObj.style.height = document.documentElement.scrollHeight + "px";

    // create the DIV that will be the alert
    alertObj = mObj.appendChild(d.createElement("div"));
    alertObj.id = "alertBox";
    // MSIE doesnt treat position:fixed correctly, so this compensates for positioning the alert
    if(d.all && !window.opera) alertObj.style.top = document.documentElement.scrollTop + "px";
    // center the alert box
    alertObj.style.left = (d.documentElement.scrollWidth - alertObj.offsetWidth)/2 + "px";

    // create an H1 element as the title bar
    h1 = alertObj.appendChild(d.createElement("h1"));
    h1.appendChild(d.createTextNode(ALERT_TITLE));

    // create a paragraph element to contain the txt argument
    msg = alertObj.appendChild(d.createElement("p"));
    msg.innerHTML = txt;

    // create an anchor element to use as the confirmation button.
    btn = alertObj.appendChild(d.createElement("a"));
    btn.id = "closeBtn";
    btn.appendChild(d.createTextNode(ALERT_BUTTON_TEXT));
    btn.href = "#";
    // set up the onclick event to remove the alert when the anchor is clicked
    btn.onclick = function() { removeCustomAlert();return false; }


  }
</script>

